function V = homogSphere(rq, q, R, M, Y, Z)
%  rq: radius vector to dipole
%   q: dipole moment vector
%   R: sphere radius
%   M: Id/(4pi sigma)
% Y,Z: 

Rq = sqrt(dot(rq,rq));
Q = sqrt(dot(q,q));

lam1 = 0; % do this in 2D, let qx==0
mu1 = rq(2)/Rq;
nu1 = rq(3)/Rq; 

PSIx = q(1)/Q;
PSIy = q(2)/Q;
PSIz = q(3)/Q; 

f = Rq/R;
fR = f*R;


r = sqrt(Y.^2 + Z.^2);
lam = zeros(size(r));
mu = cos(atan2(Z,Y)); % 
%nu = cos(atan2(Z,Y) - pi/2); % WHY MINUS ?! PI/2?!
nu = cos(atan2(-Y,Z)); % 

gamma = lam1*lam + mu1*mu + nu1*nu;
rpq = sqrt(r.^2 + (fR)^2 - 2*fR*r.*gamma);
RRpq = sqrt(R*R + f*f*r.^2 - 2*fR*r.*gamma);

V = ...
    M*PSIx *( (r.*lam -fR*lam1)./rpq.^3 + ...
    (R*r.*lam -f*lam1*r.^2)./(R*RRpq.^3) + ...
    ( (f*r - R*gamma).*lam - (f*r.*gamma - R)*lam1 )./ ...
            ( f*R*R*(1-gamma.^2) .* RRpq ) + ...
    ( (gamma.*lam - lam1) ./ (f*R*R*(1-gamma.^2)) )) ...
    + ...
    M*PSIy *( (r.*mu -fR*mu1)./rpq.^3 + ...
    (R*r.*mu -f*mu1*r.^2)./(R*RRpq.^3) + ...
    ( (f*r - R*gamma).*mu - (f*r.*gamma - R)*mu1 )./ ...
            ( f*R*R*(1-gamma.^2) .* RRpq ) + ...
    ( (gamma.*mu - mu1) ./ (f*R*R*(1-gamma.^2)) )) ...
    + ...
    M*PSIz *( (r.*nu -fR*nu1)./rpq.^3 + ...
    (R*r.*nu -f*nu1*r.^2)./(R*RRpq.^3) + ...
    ( (f*r - R*gamma).*nu - (f*r.*gamma - R)*nu1 )./ ...
            ( f*R*R*(1-gamma.^2) .* RRpq ) + ...
    ( (gamma.*nu - nu1) ./ (f*R*R*(1-gamma.^2)) ));

% mustn't set points outside sphere to zero, since this will distort
% the potential field close to the boundary!